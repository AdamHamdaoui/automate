#!/bin/bash
#
# Helper methods specific for the running inspec end to end tests


document "run_a2_api_integration" <<DOC
  Run the a2 api integration end to end tests.

  These tests require automate running with no events or nodes ingested.

  Arguments: an exclusive list of controls to run.
    If no controls are provided, all controls will be ran.

  Example: Run all the controls:
  --------------------------------------------------------
  # run_a2_api_integration

  Example: Run only two of the controls:
  --------------------------------------------------------
  # run_a2_api_integration config-mgmt-ccr-1 config-mgmt-ccr-2
DOC
function run_a2_api_integration() {
  check_if_deployinate_started || return 1

  install_if_missing core/go go
  install_if_missing core/ruby ruby
  install_if_missing core/ruby gem
  install_if_missing core/gcc gcc
  install_if_missing core/gcc g++
  install_if_missing core/busybox-static pgrep

  log_line "Installing InSpec"
  gem install inspec -v 2.1.72
  setup_go_workspace

  pushd "$scaffolding_go_pkg_path" >/dev/null
    log_line "Staring the local requestbin"
    go run integration/helpers/requestbin/requestbin.go &

    # this is needed because the below test assumes the GOPATH is at '/go'
    ln -s /hab/cache/src/scaffolding-go-gopath /go

    local param=""
    if [[ "$1" != "" ]]; then
      param="--controls $@"
    fi

    log_line "Running Tests"
    test_notifications_endpoint="http://localhost:15555" \
      $(hab pkg path core/ruby 2> /dev/null)/bin/inspec \
      exec --no-backend-cache inspec/a2-api-integration $param

    log_line "Stopping the local requestbin ($REQUESTBIN_PID)"
    local REQUESTBIN_PID
    REQUESTBIN_PID=$(pgrep requestbin);
    kill "$REQUESTBIN_PID"
  popd >/dev/null

}
