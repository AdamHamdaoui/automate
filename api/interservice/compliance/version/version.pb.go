// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/interservice/compliance/version/version.proto

package version

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VersionInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	Sha                  string   `protobuf:"bytes,3,opt,name=sha,proto3" json:"sha,omitempty" toml:"sha,omitempty" mapstructure:"sha,omitempty"`
	Built                string   `protobuf:"bytes,4,opt,name=built,proto3" json:"built,omitempty" toml:"built,omitempty" mapstructure:"built,omitempty"`
	Api                  string   `protobuf:"bytes,5,opt,name=api,proto3" json:"api,omitempty" toml:"api,omitempty" mapstructure:"api,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *VersionInfo) Reset()         { *m = VersionInfo{} }
func (m *VersionInfo) String() string { return proto.CompactTextString(m) }
func (*VersionInfo) ProtoMessage()    {}
func (*VersionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ab90ad932d7b52, []int{0}
}

func (m *VersionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionInfo.Unmarshal(m, b)
}
func (m *VersionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionInfo.Marshal(b, m, deterministic)
}
func (m *VersionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionInfo.Merge(m, src)
}
func (m *VersionInfo) XXX_Size() int {
	return xxx_messageInfo_VersionInfo.Size(m)
}
func (m *VersionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VersionInfo proto.InternalMessageInfo

func (m *VersionInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VersionInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VersionInfo) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

func (m *VersionInfo) GetBuilt() string {
	if m != nil {
		return m.Built
	}
	return ""
}

func (m *VersionInfo) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func init() {
	proto.RegisterType((*VersionInfo)(nil), "chef.automate.domain.compliance.version.VersionInfo")
}

func init() {
	proto.RegisterFile("api/interservice/compliance/version/version.proto", fileDescriptor_50ab90ad932d7b52)
}

var fileDescriptor_50ab90ad932d7b52 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0x4d, 0x4b, 0xc4, 0x30,
	0x10, 0x65, 0xdd, 0x5d, 0x17, 0x23, 0x88, 0x04, 0x91, 0x50, 0x3d, 0x88, 0x17, 0x3d, 0x25, 0xf8,
	0x71, 0x14, 0x0f, 0x82, 0x07, 0xaf, 0x0a, 0x0a, 0xde, 0xa6, 0x75, 0xda, 0x0e, 0xb4, 0x99, 0xd0,
	0xa6, 0x0b, 0xfe, 0x7b, 0xc9, 0x47, 0x71, 0x8f, 0x7b, 0xca, 0xcc, 0x9b, 0x97, 0xf7, 0x5e, 0x26,
	0xe2, 0x0e, 0x1c, 0x19, 0xb2, 0x1e, 0x87, 0x11, 0x87, 0x2d, 0x55, 0x68, 0x2a, 0xee, 0x5d, 0x47,
	0x60, 0x2b, 0x34, 0x5b, 0x1c, 0x46, 0x62, 0x3b, 0x9f, 0xda, 0x0d, 0xec, 0x59, 0xde, 0x54, 0x2d,
	0xd6, 0x1a, 0x26, 0xcf, 0x3d, 0x78, 0xd4, 0x3f, 0xdc, 0x03, 0x59, 0xfd, 0x7f, 0x4d, 0x67, 0x7a,
	0x71, 0xd9, 0x30, 0x37, 0x1d, 0x9a, 0x60, 0x01, 0xd6, 0xb2, 0x07, 0x4f, 0x6c, 0xc7, 0x24, 0x53,
	0x5c, 0xe4, 0x69, 0xec, 0xca, 0xa9, 0x36, 0xd8, 0x3b, 0xff, 0x9b, 0x86, 0xd7, 0x93, 0x38, 0xfe,
	0x4c, 0x2a, 0x6f, 0xb6, 0x66, 0x29, 0xc5, 0xca, 0x42, 0x8f, 0x6a, 0x71, 0xb5, 0xb8, 0x3d, 0x7a,
	0x8f, 0xb5, 0x54, 0x62, 0x93, 0x8d, 0xd4, 0x41, 0x84, 0xe7, 0x56, 0x9e, 0x8a, 0xe5, 0xd8, 0x82,
	0x5a, 0x46, 0x34, 0x94, 0xf2, 0x4c, 0xac, 0xcb, 0x89, 0x3a, 0xaf, 0x56, 0x11, 0x4b, 0x4d, 0xe0,
	0x81, 0x23, 0xb5, 0x4e, 0x3c, 0x70, 0x74, 0x4f, 0xe2, 0x24, 0xdb, 0x7e, 0xa4, 0x6d, 0xc8, 0x2f,
	0xb1, 0xc9, 0x88, 0x3c, 0xd7, 0x29, 0xb1, 0x9e, 0x13, 0xeb, 0xd7, 0x90, 0xb8, 0x78, 0xd4, 0x7b,
	0x2e, 0x44, 0xef, 0x3c, 0xe9, 0xe5, 0xf9, 0xfb, 0xa9, 0x21, 0xdf, 0x4e, 0x65, 0x20, 0x9a, 0xa0,
	0x60, 0x66, 0x05, 0xb3, 0xc7, 0x9f, 0x94, 0x87, 0x31, 0xc5, 0xc3, 0x5f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xfd, 0xe3, 0x71, 0x3b, 0xc1, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VersionServiceClient is the client API for VersionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VersionServiceClient interface {
	Version(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionInfo, error)
}

type versionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVersionServiceClient(cc grpc.ClientConnInterface) VersionServiceClient {
	return &versionServiceClient{cc}
}

func (c *versionServiceClient) Version(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionInfo, error) {
	out := new(VersionInfo)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.compliance.version.VersionService/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VersionServiceServer is the server API for VersionService service.
type VersionServiceServer interface {
	Version(context.Context, *empty.Empty) (*VersionInfo, error)
}

// UnimplementedVersionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVersionServiceServer struct {
}

func (*UnimplementedVersionServiceServer) Version(ctx context.Context, req *empty.Empty) (*VersionInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}

func RegisterVersionServiceServer(s *grpc.Server, srv VersionServiceServer) {
	s.RegisterService(&_VersionService_serviceDesc, srv)
}

func _VersionService_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionServiceServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.compliance.version.VersionService/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionServiceServer).Version(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _VersionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.domain.compliance.version.VersionService",
	HandlerType: (*VersionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _VersionService_Version_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/interservice/compliance/version/version.proto",
}
