// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package scratch

import (
	"context"

	"github.com/chef/automate/api/interservice/authn"
	"github.com/chef/automate/api/interservice/authz"
	"github.com/chef/automate/lib/grpc/secureconn"
)

// Injectors from wire.go:

func Setup() (*authz.Policy, func(), error) {
	contextContext := context.Background()
	serviceCerts, err := DevCerts()
	if err != nil {
		return nil, nil, err
	}
	v := FactoryOpts()
	factory := secureconn.NewFactory(serviceCerts, v...)
	clientConn, err := Conn(contextContext, factory)
	if err != nil {
		return nil, nil, err
	}
	policiesClient := authz.NewPoliciesClient(clientConn)
	tokensMgmtClient := authn.NewTokensMgmtClient(clientConn)
	token, cleanup, err := Token(contextContext, tokensMgmtClient)
	if err != nil {
		return nil, nil, err
	}
	policy, cleanup2, err := Policy(contextContext, policiesClient, token)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	return policy, func() {
		cleanup2()
		cleanup()
	}, nil
}
