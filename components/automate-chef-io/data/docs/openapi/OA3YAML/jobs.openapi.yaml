openapi: 3.0.0
info:
  title: components/automate-gateway/api/compliance/scanner/jobs/jobs.proto
  version: "0"
paths:
  /compliance/scanner/jobs:
    post:
      operationId: Create
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Job"
        required: true
      tags:
        - JobsService
  "/compliance/scanner/jobs/id/{id}":
    get:
      operationId: Read
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Job"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - JobsService
    delete:
      operationId: Delete
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                properties: {}
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - JobsService
    put:
      operationId: Update
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                properties: {}
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Job"
        required: true
      tags:
        - JobsService
  "/compliance/scanner/jobs/rerun/id/{id}":
    get:
      operationId: Rerun
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1RerunResponse"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - JobsService
  /compliance/scanner/jobs/search:
    post:
      operationId: List
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Jobs"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Query"
        required: true
      tags:
        - JobsService
components:
  schemas:
    QueryOrderType:
      type: string
      enum:
        - ASC
        - DESC
      default: ASC
    commonFilter:
      type: object
      properties:
        key:
          type: string
        exclude:
          type: boolean
          format: boolean
        values:
          type: array
          items:
            type: string
    commonKv:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    v1Id:
      type: object
      properties:
        id:
          type: string
    v1Job:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        timeout:
          type: integer
          format: int32
        tags:
          type: array
          items:
            $ref: "#/components/schemas/commonKv"
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        status:
          type: string
        retries:
          type: integer
          format: int32
        retries_left:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: "#/components/schemas/v1ResultsRow"
        nodes:
          type: array
          items:
            type: string
        profiles:
          type: array
          items:
            type: string
        node_count:
          type: integer
          format: int32
        profile_count:
          type: integer
          format: int32
        node_selectors:
          type: array
          items:
            $ref: "#/components/schemas/v1ManagerFilter"
        scheduled_time:
          type: string
          format: date-time
        recurrence:
          type: string
        parent_id:
          type: string
        job_count:
          type: integer
          format: int32
        deleted:
          type: boolean
          format: boolean
    v1Jobs:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: "#/components/schemas/v1Job"
        total:
          type: integer
          format: int32
    v1ManagerFilter:
      type: object
      properties:
        manager_id:
          type: string
        filters:
          type: array
          items:
            $ref: "#/components/schemas/commonFilter"
    v1Query:
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: "#/components/schemas/commonFilter"
        order:
          $ref: "#/components/schemas/QueryOrderType"
        sort:
          type: string
        page:
          type: integer
          format: int32
        per_page:
          type: integer
          format: int32
    v1RerunResponse:
      type: object
    v1ResultsRow:
      type: object
      properties:
        node_id:
          type: string
        report_id:
          type: string
        status:
          type: string
        result:
          type: string
        job_id:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
