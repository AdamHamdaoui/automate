#!{{pkgPathFor "core/bash"}}/bin/bash -e

exec 2>&1

# Call the script to block until user accepts the MLSA via the package's config
{{pkgPathFor "chef/mlsa"}}/bin/accept {{cfg.mlsa.accept}}

pg-helper ensure-service-database "{{cfg.storage.database}}" "{{cfg.storage.user}}"
pg-helper ensure-service-database "{{cfg.storage.teams_database}}" "{{cfg.storage.user}}"

pg-helper create-extension "{{cfg.storage.database}}" "pgcrypto"
pg-helper create-extension "{{cfg.storage.database}}" "uuid-ossp"
pg-helper create-extension "{{cfg.storage.teams_database}}" "pgcrypto"
pg-helper create-extension "{{cfg.storage.teams_database}}" "uuid-ossp"

# cleanup old migration files
rm -rf {{pkg.svc_static_path}}/{migrations,data-migrations}
rm -rf {{pkg.svc_static_path}}/{teams-migrations,teams-data-migrations}

{{~#eachAlive bind.event-service.members as |event-service|}}
{{~#if @last}}
addNoProxy {{event-service.sys.ip}}
{{~/if}}
{{~/eachAlive}}

exec authz-service {{pkg.svc_config_path}}/config.yml
