// Code generated by protoc-gen-policy. DO NOT EDIT.
// source: components/automate-gateway/api/auth/tokens/tokens.proto

package tokens

import (
	request "github.com/chef/automate/components/automate-gateway/api/auth/tokens/request"
	policyv2 "github.com/chef/automate/components/automate-gateway/authz/policy_v2"
)

func init() {
	policyv2.MapMethodTo("/chef.automate.api.tokens.TokensMgmt/GetTokens", "iam:tokens", "iam:tokens:list", "GET", "/auth/tokens", func(unexpandedResource string, input interface{}) string {
		return unexpandedResource
	})
	policyv2.MapMethodTo("/chef.automate.api.tokens.TokensMgmt/CreateToken", "iam:tokens", "iam:tokens:create", "POST", "/auth/tokens", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*request.CreateToken); ok {
			return policyv2.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "description":
					return m.Description
				case "value":
					return m.Value
				case "id":
					return m.Id
				default:
					return ""
				}
			})
		}
		return ""
	})
	policyv2.MapMethodTo("/chef.automate.api.tokens.TokensMgmt/UpdateToken", "iam:tokens:{id}", "iam:tokens:update", "PUT", "/auth/tokens/{id}", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*request.UpdateToken); ok {
			return policyv2.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "id":
					return m.Id
				case "description":
					return m.Description
				default:
					return ""
				}
			})
		}
		return ""
	})
	policyv2.MapMethodTo("/chef.automate.api.tokens.TokensMgmt/GetToken", "iam:tokens:{id}", "iam:tokens:get", "GET", "/auth/tokens/{id}", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*request.Uuid); ok {
			return policyv2.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "id":
					return m.Id
				default:
					return ""
				}
			})
		}
		return ""
	})
	policyv2.MapMethodTo("/chef.automate.api.tokens.TokensMgmt/DeleteToken", "iam:tokens:{id}", "iam:tokens:delete", "DELETE", "/auth/tokens/{id}", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*request.Uuid); ok {
			return policyv2.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "id":
					return m.Id
				default:
					return ""
				}
			})
		}
		return ""
	})
}
