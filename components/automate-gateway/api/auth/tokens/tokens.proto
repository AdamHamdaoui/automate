syntax = "proto3";

package chef.automate.api.tokens;
option go_package = "github.com/chef/automate/components/automate-gateway/api/auth/tokens";

import "google/api/annotations.proto";

import "components/automate-gateway/api/auth/tokens/request/tokens.proto";
import "components/automate-gateway/api/auth/tokens/response/tokens.proto";

// for option (chef.automate.api.policy)
import "components/automate-grpc/protoc-gen-policy/api/annotations.proto";
// for option (chef.automate.api.iam.policy)
import "components/automate-grpc/protoc-gen-policy/iam/annotations.proto";

service TokensMgmt {
  rpc GetTokens (tokens.request.GetTokensReq) returns (tokens.response.Tokens) {
    option (google.api.http).get = "/auth/tokens";
    option (chef.automate.api.policy).resource = "auth:api_tokens";
    option (chef.automate.api.policy).action = "read";
    option (chef.automate.api.iam.policy).resource = "iam:tokens";
    option (chef.automate.api.iam.policy).action = "iam:tokens:list";
  };

  rpc CreateToken (tokens.request.CreateToken) returns (tokens.response.Token) {
    option (google.api.http).post = "/auth/tokens";
    option (google.api.http).body = "*";
    option (chef.automate.api.policy).resource = "auth:api_tokens";
    option (chef.automate.api.policy).action = "create";
    option (chef.automate.api.iam.policy).resource = "iam:tokens";
    option (chef.automate.api.iam.policy).action = "iam:tokens:create";
  };

  rpc UpdateToken (tokens.request.UpdateToken) returns (tokens.response.Token) {
    option (google.api.http).put = "/auth/tokens/{id}";
    option (google.api.http).body = "*";
    option (chef.automate.api.policy).resource = "auth:api_tokens:{id}";
    option (chef.automate.api.policy).action = "update";
    option (chef.automate.api.iam.policy).resource = "iam:tokens:{id}";
    option (chef.automate.api.iam.policy).action = "iam:tokens:update";
  };

  rpc GetToken (tokens.request.Uuid) returns (tokens.response.Token) {
    option (google.api.http).get = "/auth/tokens/{id}";
    option (chef.automate.api.policy).resource = "auth:api_tokens:{id}";
    option (chef.automate.api.policy).action = "read";
    option (chef.automate.api.iam.policy).resource = "iam:tokens:{id}";
    option (chef.automate.api.iam.policy).action = "iam:tokens:get";
  };

  rpc DeleteToken (tokens.request.Uuid) returns (tokens.response.DeleteTokenResp) {
    option (google.api.http).delete = "/auth/tokens/{id}";
    option (chef.automate.api.policy).resource = "auth:api_tokens:{id}";
    option (chef.automate.api.policy).action = "delete";
    option (chef.automate.api.iam.policy).resource = "iam:tokens:{id}";
    option (chef.automate.api.iam.policy).action = "iam:tokens:delete";
  };
}
