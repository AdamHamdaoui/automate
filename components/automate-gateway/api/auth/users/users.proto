syntax = "proto3";

package chef.automate.api.users;
option go_package = "github.com/chef/automate/components/automate-gateway/api/auth/users";

import "google/api/annotations.proto";
import "components/automate-gateway/api/auth/users/request/users.proto";
import "components/automate-gateway/api/auth/users/response/users.proto";
// for option (chef.automate.api.policy)
import "components/automate-grpc/protoc-gen-policy/api/annotations.proto";
// for option (chef.automate.api.iam.policy)
import "components/automate-grpc/protoc-gen-policy/iam/annotations.proto";


service UsersMgmt {
  rpc GetUsers (users.request.GetUsersReq) returns (users.response.Users) {
    option (google.api.http).get = "/auth/users";
    option (chef.automate.api.policy).resource = "auth:users";
    option (chef.automate.api.policy).action = "read";
    option (chef.automate.api.iam.policy).resource = "iam:users";
    option (chef.automate.api.iam.policy).action = "iam:users:list";
  }

  rpc GetUserByUsername (users.request.Username) returns (users.response.User) {
    option (google.api.http).get = "/auth/users/{username}";
    option (chef.automate.api.policy).resource = "auth:users:{username}";
    option (chef.automate.api.policy).action = "read";
    option (chef.automate.api.iam.policy).resource = "iam:users:{username}";
    option (chef.automate.api.iam.policy).action = "iam:users:get";
  }

  rpc CreateUser (users.request.CreateUser) returns (users.response.User) {
    option (google.api.http).post = "/auth/users";
    option (google.api.http).body = "*";
    option (chef.automate.api.policy).resource = "auth:users";
    option (chef.automate.api.policy).action = "create";
    option (chef.automate.api.iam.policy).resource = "iam:users";
    option (chef.automate.api.iam.policy).action = "iam:users:create";
  }

  rpc DeleteUserByUsername (users.request.Username) returns (users.response.DeleteUserResp) {
    option (google.api.http).delete = "/auth/users/{username}";
    option (chef.automate.api.policy).resource = "auth:users:{username}";
    option (chef.automate.api.policy).action = "delete";
    option (chef.automate.api.iam.policy).resource = "iam:users:{username}";
    option (chef.automate.api.iam.policy).action = "iam:users:delete";
  }

  rpc UpdateUser (users.request.UpdateUser) returns (users.response.User) {
    option (google.api.http).put = "/auth/users/{username}";
    option (google.api.http).body = "*";
    option (chef.automate.api.policy).resource = "auth:users:{username}";
    option (chef.automate.api.policy).action = "update";
    option (chef.automate.api.iam.policy).resource = "iam:users:{username}";
    option (chef.automate.api.iam.policy).action = "iam:users:update";
  }

  rpc UpdateSelf (users.request.UpdateSelf) returns (users.response.User) {
    option (google.api.http).put = "/users/{username}";
    option (google.api.http).body = "*";
    // The users namespace, as opposed for auth:users, is for actions users
    // are allowed to perform on themselves by default without admin permissions.
    option (chef.automate.api.policy).resource = "users:{username}";
    option (chef.automate.api.policy).action = "update";
    option (chef.automate.api.iam.policy).resource = "iam:usersSelf:{username}";
    option (chef.automate.api.iam.policy).action = "iam:usersSelf:update";
  }

  // deprecated API
  rpc GetUser (users.request.Email) returns (users.response.User) {
    option deprecated = true;
    option (chef.automate.api.policy).resource = "auth:users:{email}";
    option (chef.automate.api.policy).action = "read";
    option (chef.automate.api.iam.policy).resource = "iam:users:{email}";
    option (chef.automate.api.iam.policy).action = "iam:users:get";
  }
  rpc DeleteUser (users.request.Email) returns (users.response.DeleteUserResp) {
    option deprecated = true;
    option (chef.automate.api.policy).resource = "auth:users:{email}";
    option (chef.automate.api.policy).action = "delete";
    option (chef.automate.api.iam.policy).resource = "iam:users:{email}";
    option (chef.automate.api.iam.policy).action = "iam:users:delete";
  }
}
