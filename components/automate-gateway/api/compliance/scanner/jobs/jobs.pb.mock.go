// Code generated by protoc-gen-grpc-mock. DO NOT EDIT.
// source: components/automate-gateway/api/compliance/scanner/jobs/jobs.proto

package jobs

import (
	"context"

	empty "github.com/golang/protobuf/ptypes/empty"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
)

// verify that the mock satisfies the JobsServiceServer interface (at compile time)
var _ JobsServiceServer = &JobsServiceServerMock{}

// NewJobsServiceServerMock gives you a fresh instance of JobsServiceServerMock.
func NewJobsServiceServerMock() *JobsServiceServerMock {
	return &JobsServiceServerMock{validateRequests: true}
}

// NewJobsServiceServerMockWithoutValidation gives you a fresh instance of
// JobsServiceServerMock which does not attempt to validate requests before passing
// them to their respective '*Func'.
func NewJobsServiceServerMockWithoutValidation() *JobsServiceServerMock {
	return &JobsServiceServerMock{}
}

// JobsServiceServerMock is the mock-what-you-want struct that stubs all not-overridden
// methods with "not implemented" returns
type JobsServiceServerMock struct {
	validateRequests bool
	CreateFunc       func(context.Context, *Job) (*Id, error)
	ReadFunc         func(context.Context, *Id) (*Job, error)
	UpdateFunc       func(context.Context, *Job) (*Id, error)
	DeleteFunc       func(context.Context, *Id) (*empty.Empty, error)
	ListFunc         func(context.Context, *Query) (*Jobs, error)
	RerunFunc        func(context.Context, *Id) (*RerunResponse, error)
}

func (m *JobsServiceServerMock) Create(ctx context.Context, req *Job) (*Id, error) {
	if msg, ok := interface{}(req).(interface{ Validate() error }); m.validateRequests && ok {
		if err := msg.Validate(); err != nil {
			return nil, status.Error(codes.InvalidArgument, err.Error())
		}
	}
	if f := m.CreateFunc; f != nil {
		return f(ctx, req)
	}
	return nil, status.Error(codes.Internal, "mock: 'Create' not implemented")
}

func (m *JobsServiceServerMock) Read(ctx context.Context, req *Id) (*Job, error) {
	if msg, ok := interface{}(req).(interface{ Validate() error }); m.validateRequests && ok {
		if err := msg.Validate(); err != nil {
			return nil, status.Error(codes.InvalidArgument, err.Error())
		}
	}
	if f := m.ReadFunc; f != nil {
		return f(ctx, req)
	}
	return nil, status.Error(codes.Internal, "mock: 'Read' not implemented")
}

func (m *JobsServiceServerMock) Update(ctx context.Context, req *Job) (*Id, error) {
	if msg, ok := interface{}(req).(interface{ Validate() error }); m.validateRequests && ok {
		if err := msg.Validate(); err != nil {
			return nil, status.Error(codes.InvalidArgument, err.Error())
		}
	}
	if f := m.UpdateFunc; f != nil {
		return f(ctx, req)
	}
	return nil, status.Error(codes.Internal, "mock: 'Update' not implemented")
}

func (m *JobsServiceServerMock) Delete(ctx context.Context, req *Id) (*empty.Empty, error) {
	if msg, ok := interface{}(req).(interface{ Validate() error }); m.validateRequests && ok {
		if err := msg.Validate(); err != nil {
			return nil, status.Error(codes.InvalidArgument, err.Error())
		}
	}
	if f := m.DeleteFunc; f != nil {
		return f(ctx, req)
	}
	return nil, status.Error(codes.Internal, "mock: 'Delete' not implemented")
}

func (m *JobsServiceServerMock) List(ctx context.Context, req *Query) (*Jobs, error) {
	if msg, ok := interface{}(req).(interface{ Validate() error }); m.validateRequests && ok {
		if err := msg.Validate(); err != nil {
			return nil, status.Error(codes.InvalidArgument, err.Error())
		}
	}
	if f := m.ListFunc; f != nil {
		return f(ctx, req)
	}
	return nil, status.Error(codes.Internal, "mock: 'List' not implemented")
}

func (m *JobsServiceServerMock) Rerun(ctx context.Context, req *Id) (*RerunResponse, error) {
	if msg, ok := interface{}(req).(interface{ Validate() error }); m.validateRequests && ok {
		if err := msg.Validate(); err != nil {
			return nil, status.Error(codes.InvalidArgument, err.Error())
		}
	}
	if f := m.RerunFunc; f != nil {
		return f(ctx, req)
	}
	return nil, status.Error(codes.Internal, "mock: 'Rerun' not implemented")
}

// Reset resets all overridden functions
func (m *JobsServiceServerMock) Reset() {
	m.CreateFunc = nil
	m.ReadFunc = nil
	m.UpdateFunc = nil
	m.DeleteFunc = nil
	m.ListFunc = nil
	m.RerunFunc = nil
}
